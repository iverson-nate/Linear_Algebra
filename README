Intronduction to Linear Algebra

*************
Authors:
*************

Nate Iverson 
Sonmez Sahutoglu 

*************
Goal: 
*************
Create a usable linear algebra textbook for the University of Toledo 
Math 1890. It should contain proofs, but still be example driven. 
So far our goal has been to introduce linear transformations early and motivate
the rest of the book with linear transformations. Our plan is to cover at 
least till spectral theory. Some optional topics we would like to include once the math 1890 part is taken care of: Jordan Normal Form, SVD, Power Method, Eigencentrality, Least Squares (linear algebra point of view), pseudo inverses. 

*************
File Structure:
*************

mycommands.sty (Put the special commands you want and packages in here)
Pictures/      (pdfs for chapter heading pictures and cover picture)
fancybook.cls  (We've rewritten most of the Legrand Orange book to be in here)
linear_algebra.tex  (main file, avoid editing author and copyright in here)
bibliography.bib  (bibliography use standard keys from mathscinet)
makefile	  (Sets up make to compile using pdflatex)   
README		  (This file)
Rn/		  (Subdirectory of Real vector spaces stuff currently chapter1)
Appendix/	  (Subdirectory of supplemental material
)
*************
Coding style:
*************

We use \begin{bmatrix} or \begin{bmatrix*}[C] for a matrix with preceding 
unary minues.We use bracketed symbols for both matrices and vectors.

To say $n$-th use \nth{n} 5th is \nth{5}

We use $\vec{v}$ to denote a vector v

We use the following theorem type environments (using thmtools): 
theorem, definition, remark, proposition, corollary,example, exercise, lemma
e.g.
\begin{definition}[1st example]\label{def:example_defn}
This is an example
\end{definition}

We can make any theorem type environment restatable the following way:
\begin{restatable}{definition}{ExampleDefn}[1st example]\label{def:example_defn}
This is an example
\end{restatable}

The following will restate (Note underscores are not allowed):

\ExampleDefn*


